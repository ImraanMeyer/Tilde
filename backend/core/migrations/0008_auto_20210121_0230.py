# Generated by Django 3.1.4 on 2021-01-21 02:30

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import model_mixins


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('core', '0007_auto_20201205_0946'),
    ]

    operations = [
        migrations.CreateModel(
            name='Team',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.group')),
                ('created_date', models.DateField(auto_now_add=True)),
                ('active', models.BooleanField(default=True)),
                ('school_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='core.organisation')),
                ('sponsor_organisation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='sponsored_teams', to='core.organisation')),
            ],
            options={
                'permissions': (('MANAGE_CARDS', 'frontend: team manager (can move cards. No reviewing)'), ('VIEW_ALL', 'frontend: view only'), ('REVIEW_CARDS', 'frontend: reviewer (can add review any card. note, this does not imply trusted reviewer)'), ('TRUSTED_REVIEWER', 'frontend: TRUSTED reviewer (can review all, can move cards to complete)')),
            },
            bases=('auth.group', model_mixins.Mixins),
            managers=[
                ('objects', django.contrib.auth.models.GroupManager()),
            ],
        ),
        migrations.RemoveField(
            model_name='productteam',
            name='users',
        ),
        migrations.RemoveField(
            model_name='productteammembership',
            name='product_team',
        ),
        migrations.RemoveField(
            model_name='productteammembership',
            name='user',
        ),
        migrations.RemoveField(
            model_name='recruitcohort',
            name='cohort',
        ),
        migrations.RemoveField(
            model_name='recruitcohort',
            name='employer_partner',
        ),
        migrations.RemoveField(
            model_name='recruitcohort',
            name='user',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_reviewer',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_student',
        ),
        migrations.RemoveField(
            model_name='user',
            name='is_trusted_reviewer',
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.DeleteModel(
            name='Cohort',
        ),
        migrations.DeleteModel(
            name='ProductTeam',
        ),
        migrations.DeleteModel(
            name='ProductTeamMembership',
        ),
        migrations.DeleteModel(
            name='RecruitCohort',
        ),
    ]
