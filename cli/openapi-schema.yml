openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: API endpoint that allows users to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: API endpoint that allows users to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/user_profiles/:
    get:
      operationId: listUserProfiles
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    post:
      operationId: createUserProfile
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
  /api/user_profiles/{id}/:
    get:
      operationId: retrieveUserProfile
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserProfile
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserProfile
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUserProfile
      description: API endpoint that allows user profiles to be viewed or edited.
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user profile.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/curriculums/:
    get:
      operationId: listCurriculums
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Curriculum'
          description: ''
      tags:
      - api
    post:
      operationId: createCurriculum
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curriculum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curriculum'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
      tags:
      - api
  /api/curriculums/{id}/:
    get:
      operationId: retrieveCurriculum
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this curriculum.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
      tags:
      - api
    put:
      operationId: updateCurriculum
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this curriculum.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curriculum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curriculum'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCurriculum
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this curriculum.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Curriculum'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Curriculum'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Curriculum'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Curriculum'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCurriculum
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this curriculum.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/teams/:
    get:
      operationId: listTeams
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - api
    post:
      operationId: createTeam
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - api
  /api/teams/{id}/:
    get:
      operationId: retrieveTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - api
    put:
      operationId: updateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Team'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTeam
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      - name: active
        required: false
        in: query
        description: active
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/managment_actions/:
    get:
      operationId: listManagmentActionsViewSets
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/managment_actions/assign_user_as_reviewer/:
    get:
      operationId: assignUserAsReviewerManagmentActionsViewSet
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: assignUserAsReviewerManagmentActionsViewSet
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/managment_actions/auto_assign_reviewers/:
    get:
      operationId: autoAssignReviewersManagmentActionsViewSet
      description: automatically assign qualified reviewers to cards
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: autoAssignReviewersManagmentActionsViewSet
      description: automatically assign qualified reviewers to cards
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/managment_actions/team_review_by_other/:
    get:
      operationId: teamReviewByOtherManagmentActionsViewSet
      description: grab users from another group and randomise them as reviewers for
        this group
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
    post:
      operationId: teamReviewByOtherManagmentActionsViewSet
      description: grab users from another group and randomise them as reviewers for
        this group
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/recruit_projects/:
    get:
      operationId: listRecruitProjects
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: recruit_users
        required: false
        in: query
        description: recruit_users
        schema:
          type: string
      - name: reviewer_users
        required: false
        in: query
        description: reviewer_users
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RecruitProject'
          description: ''
      tags:
      - api
    post:
      operationId: createRecruitProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProject'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProject'
          description: ''
      tags:
      - api
  /api/recruit_projects/{id}/:
    get:
      operationId: retrieveRecruitProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project.
        schema:
          type: string
      - name: recruit_users
        required: false
        in: query
        description: recruit_users
        schema:
          type: string
      - name: reviewer_users
        required: false
        in: query
        description: reviewer_users
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProject'
          description: ''
      tags:
      - api
    put:
      operationId: updateRecruitProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project.
        schema:
          type: string
      - name: recruit_users
        required: false
        in: query
        description: recruit_users
        schema:
          type: string
      - name: reviewer_users
        required: false
        in: query
        description: reviewer_users
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProject'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRecruitProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project.
        schema:
          type: string
      - name: recruit_users
        required: false
        in: query
        description: recruit_users
        schema:
          type: string
      - name: reviewer_users
        required: false
        in: query
        description: reviewer_users
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProject'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProject'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProject'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRecruitProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project.
        schema:
          type: string
      - name: recruit_users
        required: false
        in: query
        description: recruit_users
        schema:
          type: string
      - name: reviewer_users
        required: false
        in: query
        description: reviewer_users
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/recruit_project_reviews/:
    get:
      operationId: listRecruitProjectReviews
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: recruit_project
        required: false
        in: query
        description: recruit_project
        schema:
          type: string
      - name: recruit_project__recruit_users
        required: false
        in: query
        description: recruit_project__recruit_users
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/RecruitProjectReview'
          description: ''
      tags:
      - api
    post:
      operationId: createRecruitProjectReview
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProjectReview'
          description: ''
      tags:
      - api
  /api/recruit_project_reviews/{id}/:
    get:
      operationId: retrieveRecruitProjectReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: recruit_project
        required: false
        in: query
        description: recruit_project
        schema:
          type: string
      - name: recruit_project__recruit_users
        required: false
        in: query
        description: recruit_project__recruit_users
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProjectReview'
          description: ''
      tags:
      - api
    put:
      operationId: updateRecruitProjectReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: recruit_project
        required: false
        in: query
        description: recruit_project
        schema:
          type: string
      - name: recruit_project__recruit_users
        required: false
        in: query
        description: recruit_project__recruit_users
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProjectReview'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRecruitProjectReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: recruit_project
        required: false
        in: query
        description: recruit_project
        schema:
          type: string
      - name: recruit_project__recruit_users
        required: false
        in: query
        description: recruit_project__recruit_users
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RecruitProjectReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecruitProjectReview'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRecruitProjectReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this recruit project review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: recruit_project
        required: false
        in: query
        description: recruit_project
        schema:
          type: string
      - name: recruit_project__recruit_users
        required: false
        in: query
        description: recruit_project__recruit_users
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/content_item/:
    get:
      operationId: listContentItems
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContentItem'
          description: ''
      tags:
      - api
    post:
      operationId: createContentItem
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItem'
          description: ''
      tags:
      - api
  /api/content_item/{id}/:
    get:
      operationId: retrieveContentItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItem'
          description: ''
      tags:
      - api
    put:
      operationId: updateContentItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateContentItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItem'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyContentItem
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/content_item_order/:
    get:
      operationId: listContentItemOrders
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ContentItemOrder'
          description: ''
      tags:
      - api
    post:
      operationId: createContentItemOrder
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemOrder'
          description: ''
      tags:
      - api
  /api/content_item_order/{id}/:
    get:
      operationId: retrieveContentItemOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item order.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemOrder'
          description: ''
      tags:
      - api
    put:
      operationId: updateContentItemOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemOrder'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateContentItemOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item order.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ContentItemOrder'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentItemOrder'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyContentItemOrder
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this content item order.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/agile_card/:
    get:
      operationId: listAgileCards
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: reviewers
        required: false
        in: query
        description: reviewers
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/AgileCard'
          description: ''
      tags:
      - api
    post:
      operationId: createAgileCard
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgileCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgileCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgileCard'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgileCard'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/:
    get:
      operationId: retrieveAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: reviewers
        required: false
        in: query
        description: reviewers
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgileCard'
          description: ''
      tags:
      - api
    put:
      operationId: updateAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: reviewers
        required: false
        in: query
        description: reviewers
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgileCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgileCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgileCard'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgileCard'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: reviewers
        required: false
        in: query
        description: reviewers
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgileCard'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AgileCard'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AgileCard'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgileCard'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: reviewers
        required: false
        in: query
        description: reviewers
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/repository/:
    get:
      operationId: listRepositorys
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Repository'
          description: ''
      tags:
      - api
    post:
      operationId: createRepository
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: ''
      tags:
      - api
  /api/repository/{id}/:
    get:
      operationId: retrieveRepository
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this repository.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: ''
      tags:
      - api
    put:
      operationId: updateRepository
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this repository.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRepository
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this repository.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Repository'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Repository'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Repository'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Repository'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyRepository
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this repository.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/commit/:
    get:
      operationId: listCommits
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Commit'
          description: ''
      tags:
      - api
    post:
      operationId: createCommit
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Commit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Commit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Commit'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      tags:
      - api
  /api/commit/{id}/:
    get:
      operationId: retrieveCommit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this commit.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      tags:
      - api
    put:
      operationId: updateCommit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this commit.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Commit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Commit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Commit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCommit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this commit.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Commit'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Commit'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Commit'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Commit'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyCommit
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this commit.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pull_request/:
    get:
      operationId: listPullRequests
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PullRequest'
          description: ''
      tags:
      - api
    post:
      operationId: createPullRequest
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: ''
      tags:
      - api
  /api/pull_request/{id}/:
    get:
      operationId: retrievePullRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: ''
      tags:
      - api
    put:
      operationId: updatePullRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePullRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequest'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPullRequest
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request.
        schema:
          type: string
      - name: repository
        required: false
        in: query
        description: repository
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/pull_request_review/:
    get:
      operationId: listPullRequestReviews
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: pull_request
        required: false
        in: query
        description: pull_request
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/PullRequestReview'
          description: ''
      tags:
      - api
    post:
      operationId: createPullRequestReview
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestReview'
          description: ''
      tags:
      - api
  /api/pull_request_review/{id}/:
    get:
      operationId: retrievePullRequestReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request review.
        schema:
          type: string
      - name: pull_request
        required: false
        in: query
        description: pull_request
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestReview'
          description: ''
      tags:
      - api
    put:
      operationId: updatePullRequestReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request review.
        schema:
          type: string
      - name: pull_request
        required: false
        in: query
        description: pull_request
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestReview'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdatePullRequestReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request review.
        schema:
          type: string
      - name: pull_request
        required: false
        in: query
        description: pull_request
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PullRequestReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullRequestReview'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyPullRequestReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this pull request review.
        schema:
          type: string
      - name: pull_request
        required: false
        in: query
        description: pull_request
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/card_summaries/:
    get:
      operationId: listAgileCards
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: content_item__content_type
        required: false
        in: query
        description: content_item__content_type
        schema:
          type: string
          enum:
          - P
          - T
          - W
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/cardsummary'
          description: ''
      tags:
      - api
    post:
      operationId: createAgileCard
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardsummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cardsummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/cardsummary'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardsummary'
          description: ''
      tags:
      - api
  /api/card_summaries/{id}/:
    get:
      operationId: retrieveAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: content_item__content_type
        required: false
        in: query
        description: content_item__content_type
        schema:
          type: string
          enum:
          - P
          - T
          - W
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardsummary'
          description: ''
      tags:
      - api
    put:
      operationId: updateAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: content_item__content_type
        required: false
        in: query
        description: content_item__content_type
        schema:
          type: string
          enum:
          - P
          - T
          - W
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardsummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cardsummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/cardsummary'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardsummary'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: content_item__content_type
        required: false
        in: query
        description: content_item__content_type
        schema:
          type: string
          enum:
          - P
          - T
          - W
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cardsummary'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/cardsummary'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/cardsummary'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cardsummary'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      - name: assignees
        required: false
        in: query
        description: assignees
        schema:
          type: string
      - name: content_item__content_type
        required: false
        in: query
        description: content_item__content_type
        schema:
          type: string
          enum:
          - P
          - T
          - W
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/topic_reviews/:
    get:
      operationId: listTopicReviews
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: topic_progress
        required: false
        in: query
        description: topic_progress
        schema:
          type: string
      - name: topic_progress__user
        required: false
        in: query
        description: topic_progress__user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TopicReview'
          description: ''
      tags:
      - api
    post:
      operationId: createTopicReview
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicReview'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicReview'
          description: ''
      tags:
      - api
  /api/topic_reviews/{id}/:
    get:
      operationId: retrieveTopicReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: topic_progress
        required: false
        in: query
        description: topic_progress
        schema:
          type: string
      - name: topic_progress__user
        required: false
        in: query
        description: topic_progress__user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicReview'
          description: ''
      tags:
      - api
    put:
      operationId: updateTopicReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: topic_progress
        required: false
        in: query
        description: topic_progress
        schema:
          type: string
      - name: topic_progress__user
        required: false
        in: query
        description: topic_progress__user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicReview'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTopicReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: topic_progress
        required: false
        in: query
        description: topic_progress
        schema:
          type: string
      - name: topic_progress__user
        required: false
        in: query
        description: topic_progress__user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicReview'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicReview'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTopicReview
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic review.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - NYC
          - C
          - E
          - R
      - name: reviewer_user
        required: false
        in: query
        description: reviewer_user
        schema:
          type: string
      - name: topic_progress
        required: false
        in: query
        description: topic_progress
        schema:
          type: string
      - name: topic_progress__user
        required: false
        in: query
        description: topic_progress__user
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/topic_progress/:
    get:
      operationId: listTopicProgress
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/TopicProgress'
          description: ''
      tags:
      - api
    post:
      operationId: createTopicProgress
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicProgress'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicProgress'
          description: ''
      tags:
      - api
  /api/topic_progress/{id}/:
    get:
      operationId: retrieveTopicProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic progress.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicProgress'
          description: ''
      tags:
      - api
    put:
      operationId: updateTopicProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic progress.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicProgress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicProgress'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTopicProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic progress.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TopicProgress'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TopicProgress'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicProgress'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTopicProgress
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this topic progress.
        schema:
          type: string
      - name: user
        required: false
        in: query
        description: user
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/workshop_attendance/:
    get:
      operationId: listWorkshopAttendances
      description: ''
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: attendee_user
        required: false
        in: query
        description: attendee_user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/WorkshopAttendance'
          description: ''
      tags:
      - api
    post:
      operationId: createWorkshopAttendance
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopAttendance'
          description: ''
      tags:
      - api
  /api/workshop_attendance/{id}/:
    get:
      operationId: retrieveWorkshopAttendance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this workshop attendance.
        schema:
          type: string
      - name: attendee_user
        required: false
        in: query
        description: attendee_user
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopAttendance'
          description: ''
      tags:
      - api
    put:
      operationId: updateWorkshopAttendance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this workshop attendance.
        schema:
          type: string
      - name: attendee_user
        required: false
        in: query
        description: attendee_user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopAttendance'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateWorkshopAttendance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this workshop attendance.
        schema:
          type: string
      - name: attendee_user
        required: false
        in: query
        description: attendee_user
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/WorkshopAttendance'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkshopAttendance'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyWorkshopAttendance
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this workshop attendance.
        schema:
          type: string
      - name: attendee_user
        required: false
        in: query
        description: attendee_user
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/who_am_i/:
    get:
      operationId: listwho_am_is
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/test_logs/:
    get:
      operationId: listtest_logs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/test_long_running_request/:
    get:
      operationId: listtest_long_running_requests
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/dj-rest-auth/logout/:
    get:
      operationId: listLogouts
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
    post:
      operationId: createLogout
      description: 'Calls Django logout method and delete the Token object

        assigned to the current User object.


        Accepts/Returns nothing.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/dj-rest-auth/user/:
    get:
      operationId: retrieveUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    put:
      operationId: updateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUserDetails
      description: 'Reads and updates UserModel fields

        Accepts GET, PUT, PATCH methods.


        Default accepted fields: username, first_name, last_name

        Default display fields: pk, username, email, first_name, last_name

        Read-only fields: pk, email


        Returns UserModel fields.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetails'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetails'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetails'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
          description: ''
      tags:
      - api
  /git_real/github_webhook:
    get:
      operationId: listgithub_webhooks
      description: 'this is where requests from Github arrives.

        based on https://docs.github.com/en/developers/webhooks-and-events/creating-webhooks'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - git-real
    post:
      operationId: creategithub_webhook
      description: 'this is where requests from Github arrives.

        based on https://docs.github.com/en/developers/webhooks-and-events/creating-webhooks'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - git-real
  /api/agile_card/{id}/add_review/:
    post:
      operationId: addReviewAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewReview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NewReview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewReview'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewReview'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/cancel_review_request/:
    post:
      operationId: cancelReviewRequestAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/cancel_workshop_attendance/:
    post:
      operationId: cancelWorkshopAttendanceAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/finish_topic/:
    post:
      operationId: finishTopicAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/mark_workshop_attendance/:
    post:
      operationId: markWorkshopAttendanceAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/request_review/:
    post:
      operationId: requestReviewAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/set_card_due_time/:
    post:
      operationId: setCardDueTimeAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDueTime'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetDueTime'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetDueTime'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetDueTime'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/set_project_link/:
    post:
      operationId: setProjectLinkAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectSubmitLink'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ProjectSubmitLink'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProjectSubmitLink'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectSubmitLink'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/start_project/:
    post:
      operationId: startProjectAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/start_topic/:
    post:
      operationId: startTopicAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/agile_card/{id}/stop_topic/:
    post:
      operationId: stopTopicAgileCard
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this agile card.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoArgs'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoArgs'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoArgs'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoArgs'
          description: ''
      tags:
      - api
  /api/logout/:
    post:
      operationId: createdelete_auth_token
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
  /api/dj-rest-auth/password/reset/:
    post:
      operationId: createPasswordReset
      description: 'Calls Django Auth PasswordResetForm save method.


        Accepts the following POST parameters: email

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordReset'
          description: ''
      tags:
      - api
  /api/dj-rest-auth/password/reset/confirm/:
    post:
      operationId: createPasswordResetConfirm
      description: "Password reset e-mail link is confirmed, therefore\nthis resets\
        \ the user's password.\n\nAccepts the following POST parameters: token, uid,\n\
        \    new_password1, new_password2\nReturns the success/fail message."
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/dj-rest-auth/login/:
    post:
      operationId: createLogin
      description: 'Check the credentials and return the REST Token

        if the credentials are valid and authenticated.

        Calls Django Auth login method to register User ID

        in Django session framework


        Accept the following POST parameters: username, password

        Return the REST Framework Token Object''s key.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
      tags:
      - api
  /api/dj-rest-auth/password/change/:
    post:
      operationId: createPasswordChange
      description: 'Calls Django Auth SetPasswordForm save method.


        Accepts the following POST parameters: new_password1, new_password2

        Returns the success/fail message.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordChange'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordChange'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordChange'
          description: ''
      tags:
      - api
  /social_auth/oauth_one_time_token_auth/:
    post:
      operationId: createoauth_one_time_token_auth
      description: based on https://developers.google.com/identity/sign-in/web/server-side-flow
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - social-auth
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 50
        first_name:
          type: string
          maxLength: 25
        last_name:
          type: string
          maxLength: 25
        preferred_name:
          type: string
          nullable: true
          maxLength: 25
        team_memberships:
          type: string
          readOnly: true
        is_active:
          type: string
          readOnly: true
        is_staff:
          type: boolean
        is_superuser:
          type: boolean
        github_name:
          type: string
          readOnly: true
      required:
      - email
    UserProfile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
      required:
      - user
    Curriculum:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 40
      required:
      - name
    Team:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 150
        active:
          type: boolean
        members:
          type: string
          readOnly: true
      required:
      - name
    RecruitProject:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_item:
          type: integer
        due_time:
          type: string
          format: date-time
          nullable: true
        complete_time:
          type: string
          format: date-time
          nullable: true
        repository:
          type: integer
          nullable: true
        project_reviews:
          type: array
          items:
            type: integer
        title:
          type: string
          readOnly: true
        content_url:
          type: string
          readOnly: true
        story_points:
          type: string
          readOnly: true
        tag_names:
          type: string
          readOnly: true
        recruit_users:
          type: array
          items:
            type: integer
        recruit_user_names:
          type: string
          readOnly: true
        reviewer_users:
          type: array
          items:
            type: integer
        reviewer_user_names:
          type: string
          readOnly: true
        agile_card:
          type: integer
        agile_card_status:
          type: string
          readOnly: true
        submission_type_nice:
          type: string
          readOnly: true
        link_submission:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
      required:
      - content_item
      - project_reviews
      - recruit_users
      - agile_card
    RecruitProjectReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - NYC
          - C
          - E
          - R
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
        comments:
          type: string
        recruit_project:
          type: integer
        reviewer_user:
          type: integer
        reviewer_user_email:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        reviewed_user_emails:
          type: string
          readOnly: true
        reviewed_user_ids:
          type: string
          readOnly: true
        trusted:
          type: boolean
        validated:
          enum:
          - i
          - c
          - d
          type: string
          nullable: true
        agile_card:
          type: string
          readOnly: true
      required:
      - status
      - comments
      - recruit_project
      - reviewer_user
      - trusted
    ContentItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_type:
          enum:
          - P
          - T
          - W
          type: string
        content_type_nice:
          type: string
          readOnly: true
        title:
          type: string
          maxLength: 150
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        url:
          type: string
          format: uri
          nullable: true
          maxLength: 2083
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
        story_points:
          enum:
          - 1
          - 2
          - 3
          - 5
          - 8
          - 13
          - 21
          - 34
          - 56
          - 89
          type: integer
          nullable: true
          minimum: -32768
          maximum: 32767
        tag_names:
          type: string
          readOnly: true
        post_ordered_content:
          type: array
          items:
            type: integer
        pre_ordered_content:
          type: array
          items:
            type: integer
        flavour_names:
          type: string
          readOnly: true
        topic_needs_review:
          type: boolean
        project_submission_type_nice:
          type: string
          readOnly: true
        continue_from_repo:
          type: integer
          nullable: true
        template_repo:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
      required:
      - content_type
      - title
      - post_ordered_content
      - pre_ordered_content
    ContentItemOrder:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        pre:
          type: integer
        post:
          type: integer
        hard_requirement:
          type: boolean
        pre_title:
          type: string
          readOnly: true
        post_title:
          type: string
          readOnly: true
      required:
      - pre
      - post
    AgileCard:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        content_item:
          type: integer
        content_item_url:
          type: string
          readOnly: true
        status:
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
          type: string
        recruit_project:
          type: integer
          nullable: true
        assignees:
          type: array
          items:
            type: integer
        reviewers:
          type: array
          items:
            type: integer
        assignee_names:
          type: string
          readOnly: true
        reviewer_names:
          type: string
          readOnly: true
        is_hard_milestone:
          type: boolean
        is_soft_milestone:
          type: boolean
        title:
          type: string
          readOnly: true
        content_type:
          type: string
          readOnly: true
        content_type_nice:
          type: string
          readOnly: true
        story_points:
          type: string
          readOnly: true
        tag_names:
          type: string
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        code_review_competent_since_last_review_request:
          type: string
          readOnly: true
        code_review_excellent_since_last_review_request:
          type: string
          readOnly: true
        code_review_red_flag_since_last_review_request:
          type: string
          readOnly: true
        code_review_ny_competent_since_last_review_request:
          type: string
          readOnly: true
        requires_cards:
          type: array
          items:
            type: integer
        required_by_cards:
          type: array
          items:
            type: integer
        flavour_names:
          type: string
          readOnly: true
        project_submission_type_nice:
          type: string
          readOnly: true
        project_link_submission:
          type: string
          readOnly: true
        topic_needs_review:
          type: string
          readOnly: true
        topic_progress:
          type: integer
          nullable: true
        due_time:
          type: string
          readOnly: true
        complete_time:
          type: string
          readOnly: true
        review_request_time:
          type: string
          readOnly: true
        start_time:
          type: string
          readOnly: true
        can_start:
          type: string
          readOnly: true
        can_force_start:
          type: string
          readOnly: true
        open_pr_count:
          type: string
          readOnly: true
      required:
      - content_item
      - status
      - is_hard_milestone
      - is_soft_milestone
      - requires_cards
      - required_by_cards
    Repository:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        owner:
          type: string
          maxLength: 50
        full_name:
          type: string
          maxLength: 150
        ssh_url:
          type: string
          maxLength: 250
        created_at:
          type: string
          format: date-time
        private:
          type: boolean
        archived:
          type: boolean
        user:
          type: integer
          nullable: true
      required:
      - owner
      - full_name
      - ssh_url
      - created_at
      - private
      - archived
    Commit:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        repository:
          type: integer
        commit_hash:
          type: string
          maxLength: 40
        author_github_name:
          type: string
          maxLength: 100
        author_email:
          type: string
          maxLength: 240
        message:
          type: string
        branch:
          type: string
          maxLength: 150
        datetime:
          type: string
          format: date-time
        user:
          type: integer
          nullable: true
      required:
      - repository
      - commit_hash
      - author_github_name
      - author_email
      - message
      - branch
      - datetime
    PullRequest:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        repository:
          type: integer
        author_github_name:
          type: string
          maxLength: 100
        state:
          type: string
          maxLength: 6
        title:
          type: string
          maxLength: 200
        body:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
          nullable: true
        closed_at:
          type: string
          format: date-time
          nullable: true
        merged_at:
          type: string
          format: date-time
          nullable: true
        number:
          type: integer
          maximum: 32767
          minimum: 0
      required:
      - repository
      - author_github_name
      - state
      - title
      - body
      - created_at
      - number
    PullRequestReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        author_github_name:
          type: string
          maxLength: 100
        pull_request:
          type: integer
        submitted_at:
          type: string
          format: date-time
          nullable: true
        body:
          type: string
        commit_id:
          type: string
          maxLength: 40
        state:
          type: string
          maxLength: 17
        user:
          type: integer
          nullable: true
      required:
      - author_github_name
      - pull_request
      - body
      - commit_id
      - state
    cardsummary:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        order:
          type: integer
          maximum: 2147483647
          minimum: 0
        content_item:
          type: integer
        content_item_url:
          type: string
          readOnly: true
        title:
          type: string
          readOnly: true
        status:
          enum:
          - B
          - R
          - IP
          - RF
          - IR
          - C
          type: string
        recruit_project:
          type: integer
          nullable: true
        due_time:
          type: string
          readOnly: true
        complete_time:
          type: string
          readOnly: true
        review_request_time:
          type: string
          readOnly: true
        start_time:
          type: string
          readOnly: true
        assignees:
          type: array
          items:
            type: integer
        assignee_names:
          type: string
          readOnly: true
        code_review_competent_since_last_review_request:
          type: string
          readOnly: true
        code_review_excellent_since_last_review_request:
          type: string
          readOnly: true
        code_review_red_flag_since_last_review_request:
          type: string
          readOnly: true
        code_review_ny_competent_since_last_review_request:
          type: string
          readOnly: true
        open_pr_count:
          type: string
          readOnly: true
      required:
      - content_item
      - status
    TopicReview:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        status:
          enum:
          - NYC
          - C
          - E
          - R
          type: string
        timestamp:
          type: string
          format: date-time
          readOnly: true
        comments:
          type: string
          nullable: true
        topic_progress:
          type: integer
        reviewer_user:
          type: integer
        reviewer_user_email:
          type: string
          readOnly: true
      required:
      - status
      - topic_progress
      - reviewer_user
    TopicProgress:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        content_item:
          type: integer
        due_time:
          type: string
          format: date-time
          nullable: true
        start_time:
          type: string
          format: date-time
          nullable: true
        complete_time:
          type: string
          format: date-time
          nullable: true
        review_request_time:
          type: string
          format: date-time
          nullable: true
        topic_reviews:
          type: array
          items:
            type: integer
        topic_needs_review:
          type: string
          readOnly: true
        flavours:
          type: string
          description: comma seperated list of flavours
      required:
      - user
      - content_item
      - topic_reviews
      - flavours
    WorkshopAttendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        timestamp:
          type: string
          format: date-time
        content_item:
          type: integer
        attendee_user:
          type: integer
      required:
      - timestamp
      - content_item
      - attendee_user
    UserDetails:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          readOnly: true
        first_name:
          type: string
          maxLength: 25
        last_name:
          type: string
          maxLength: 25
    NewReview:
      type: object
      properties:
        status:
          enum:
          - NYC
          - C
          - E
          - R
          type: string
        comments:
          type: string
      required:
      - status
      - comments
    NoArgs:
      type: object
      properties: {}
    SetDueTime:
      type: object
      properties:
        due_time:
          type: string
          format: date-time
          nullable: true
    ProjectSubmitLink:
      type: object
      properties:
        link_submission:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
            d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\z"
    PasswordReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - uid
      - token
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordChange:
      type: object
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
      required:
      - new_password1
      - new_password2
